<?php
namespace App\Model\Entity;

use Cake\Auth\DefaultPasswordHasher;
use Cake\ORM\Entity;

/**
 * User Entity.
 */
class User extends Entity
{

    /**
     * Fields that can be mass assigned using newEntity() or patchEntity().
     * Note that '*' is set to true, which allows all unspecified fields to be
     * mass assigned. For security purposes, it is advised to set '*' to false
     * (or remove), and explicitly make individual fields accessible as needed.
     *
     * @var array
     */
    protected $_accessible = [
        '*' => true,
        'id' => false,
    ];

    /**
     * @param string $password
     * @return bool|string
     */
    public static function hashPassword($password)
    {
        return (new DefaultPasswordHasher())->hash($password);
    }
    
        public $name = 'User';
    
    //’Êİ’Â¸’Á°’¤Ë’¥Ñ’¥¹’¥ï’¡¼’¥É’¤Î’¥Ï’¥Ã’¥·’¥å’²½
    public function beforeSave($options = array()) {
        if(!$this->id){
            $passwordHasher = new SimplePasswordHasher();
            $this->data['User']['password'] = $passwordHasher->hash($this->data['User']['password']);
        }
        return true;
    }
    
     //’¥Ğ’¥ê’¥Ç’¡¼’¥·’¥ç’¥ó
    public $validate = array(
        'name' => array(
            'notEmpty' => array(
                'rule' => array('notEmpty'),
                'message' => '’É¬’¿Ü’Æş’ÎÏ’¤Ç’¤¹',
                'required' => true,
            ),
            'alphaNumeric' => array(
                'rule' => array('alphaNumeric'),
                'message' => '’È¾’³Ñ’±Ñ’¿ô’»ú’¤Î’¤ß’Æş’ÎÏ’¤·’¤Æ’¤¯’¤À’¤µ’¤¤',
            ),
            'isUnique' => array(
                'rule' => array('isUnique'),
                'message' => '’¤³’¤Î’¥æ’¡¼’¥¶’Ì¾’¤Ï’´û’¤Ë’ÅĞ’Ï¿’¤µ’¤ì’¤Æ’¤¤’¤Ş’¤¹'
            ),
        ),
        'password' => array(
            'notEmpty' => array(
                'rule' => array('notEmpty'),
                'message' => '’É¬’¿Ü’Æş’ÎÏ’¤Ç’¤¹',
                'required' => true,
            ),
            'alphaNumeric' => array(
                'rule' => array('alphaNumeric'),
                'message' => '’È¾’³Ñ’±Ñ’¿ô’»ú’¤Î’¤ß’Æş’ÎÏ’¤·’¤Æ’¤¯’¤À’¤µ’¤¤',
            ),
        ),
    );
    
}




//App::uses('AppModel', 'Model');
//App::uses('SimplePasswordHasher','Controller/Component/Auth');
/*
class User_HushPass extends AppModel {
    public $name = 'User';
    
    //’Êİ’Â¸’Á°’¤Ë’¥Ñ’¥¹’¥ï’¡¼’¥É’¤Î’¥Ï’¥Ã’¥·’¥å’²½
    public function beforeSave($options = array()) {
        if(!$this->id){
            $passwordHasher = new SimplePasswordHasher();
            $this->data['User']['password'] = $passwordHasher->hash($this->data['User']['password']);
        }
        return true;
    }

 }
 */